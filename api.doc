Quy tặc gán errCode:
	-	errCode : 0 : Action API success
	-	errCode : 1 : Something not found
	-	errCode : 2 : Something not exist or action failed
	-	errCode : 3 : Error action API
	-	errCode : 4 : Missing required parameters
	-	errCode : 5 : Something incorrect

1. genreRoutes
    API tạo mới thể loại:
        - 	router.post('/create-new-genre');
        -	Input : + name (string)
					+ description (text)
        - 	Output: + errCode: 0 (tạo thành công)
                  	+ errCode: 1 (thể loại đã tồn tại)
                  	+ errCode: 3 (lỗi khi tạo)

    API xoá thể loại:
        - 	router.delete('/delete-genre');
        - 	Input : + genreCode: code thể loại (number)
        - 	Output: + errCode: 0 (xoá thành công)
                  	+ errCode: 1 (không tìm thấy thể loại)
                  	+ errCode: 3 (lỗi khi xoá)

    API cập nhật thể loại:
        - 	router.put('/edit-genre');
        - 	Input : + genreCode: code thể loại (number)
					+ name (string)
					+ description (text)
        - 	Output: + errCode: 0 (cập nhật thành công)
                  	+ errCode: 1 (không tìm thấy thể loại)
                  	+ errCode: 3 (lỗi khi cập nhật)
					+ errCode: 4 (thiếu code thể loại cần cập nhật)

    API lấy tất cả thể loại:
        - 	router.get('/get-all-genres');
        - 	Input : null
        - 	Output: + errCode: 0 (lấy thành công)
                  	+ errCode: 1 (không tìm thấy thể loại nào)

    API lấy thể loại theo code:
        - 	router.get('/get-genre-by-code');
        - 	Input : + genreCode: code thể loại (number)
        - 	Output: + errCode: 0 (lấy thành công)
                   	+ errCode: 1 (không tìm thấy thể loại)
                  	+ errCode: 3 (lỗi khi lấy dữ liệu)

    Liên kết đường dẫn:
        - 	app.use('/api/genre', router);

2. movieRoutes
    API tạo mới phim:
        - 	router.post('/create-new-movie');
        - 	Input : + title (string)
                 	+ description (text)
                 	+ genreId (number)
                 	+ duration (number)
                 	+ country (string)
                 	+ genreId (number)
					+ releaseDate (YYYY-MM-DD)
					+ image (string)
        - 	Output: + errCode: 0 (tạo thành công)
                  	+ errCode: 3 (lỗi khi tạo)
	e.g: http://localhost:6060/api/movie/create-new-movie?title=Inception&description=A%20mind-bending%20thriller&duration=148&country=USR&genreId=1&releaseDate=2009-07-15T17:00:00.000Z&image=http://example.com/inception.jpg

    API xoá phim:
        - 	router.delete('/delete-movie');
        - 	Input : + movieId: id phim (number)
        - 	Output: + errCode: 0 (xoá thành công)
                  	+ errCode: 1 (không tìm thấy phim)
                  	+ errCode: 3 (lỗi khi xoá)

    API cập nhật phim:
        - 	router.put('/edit-movie');
        - 	Input : + movieId (number)
					+ title (string)
                 	+ description (text)
                 	+ genreId (number)
                 	+ duration (number)
                 	+ country (string)
                 	+ genreId (number)
					+ releaseDate (YYYY-MM-DD)
					+ image (string)
        - 	Output: + errCode: 0 (cập nhật thành công)
                  	+ errCode: 1 (không tìm thấy phim)
                  	+ errCode: 3 (lỗi khi cập nhật)
					+ errCode: 4 (thiếu ID phim cần cập nhật)
	e.g: http://localhost:6060/api/movie/edit-movie?movieId=20&title=Inception&description=A%20mind-bending%20thriller&duration=148&country=USR&genreId=1&releaseDate=2009-07-15T17:00:00.000Z&image=http://example.com/inception.jpg

    API lấy tất cả phim:
        - 	router.get('/get-all-movies');
        - 	Input : null
        - 	Output: + errCode: 0 (lấy thành công) && tất cả bản ghi phim
                  	+ errCode: 1 (không tìm thấy phim nào)

    API lấy phim theo mã phim:
        - 	router.get('/get-movie-by-code');
        - 	Input : + movieCode (string)
        - 	Output: + errCode: 0 (lấy thành công) && bản ghi phim
                  	+ errCode: 1 (không tìm thấy phim)
                  	+ errCode: 3 (lỗi khi lấy dữ liệu)
	API lấy phim theo tên:
		-	router.get("/get-movie-by-title", movieController.handleGetMovieByTitle);
		-	Input : + title (string)
		-	Output: + errCode: 0 (lấy thành công) && bản ghi
					+ errCode: 1 (không tìm thấy phim)
					+ errCode: 3 (lỗi khi lấy dữ liệu) + lỗi

    Liên kết đường dẫn:
        - 	app.use('/api/movie', router);

3. newsRoutes
    API tạo mới tin tức:
        - 	router.post('/create-new-news');
        - 	Input : + title (text)
                 	+ content (text)
					+ image (string)
					+ link (string)
        - 	Output: + errCode: 0 (tạo thành công)
                  	+ errCode: 3 (lỗi khi tạo)
	e.g: http://localhost:6060/api/news/create-new-news?title=SampleTitle&content=SampleContent&image=http://example.com/sample.jpg&link=lksdjflksdjfl

    API xoá tin tức:
        - 	router.delete('/delete-news');
        - 	Input : + newsId (number)
        - 	Output: + errCode: 0 (xoá thành công)
                  	+ errCode: 1 (không tìm thấy tin tức)
                  	+ errCode: 3 (lỗi khi xoá)

    API cập nhật tin tức:
        - 	router.put('/edit-news');
        - 	Input : + newsId (number)
					+ title (text)
                 	+ content (text)
					+ image (string)
					+ link (string)
        - 	Output: + errCode: 0 (cập nhật thành công)
                  	+ errCode: 1 (không tìm thấy tin tức)
                  	+ errCode: 3 (lỗi khi cập nhật)
					+ errCode: 4 (thiếu ID tin tức cần cập nhật)
	e.g: http://localhost:6060/api/news/edit-news?newsId=5&title=SampleTitle&content=SampleContent&image=http://example.com/sample.jpg&link=aksdfjlksdjf

    API lấy tất cả tin tức:
        - 	router.get('/get-all-news');
        - 	Input: null
        - 	Output: + errCode: 0 (lấy thành công)
                  	+ errCode: 1 (không tìm thấy tin tức nào)

    API lấy tin tức theo id:
        - 	router.get('/get-news-by-id');
        - 	Input:  + newsId: id tin tức (number)
        - 	Output: + errCode: 0 (lấy thành công) && bản ghi tin tức
                  	+ errCode: 1 (không tìm thấy tin tức)
                  	+ errCode: 3 (lỗi khi lấy dữ liệu)

    Liên kết đường dẫn:
        - 	app.use('/api/news', router);

4. planScreenMovieRoutes
    API tạo mới lịch chiếu:
        - 	router.post('/create-plan-screen-with-movie');
        - 	Input : + roomId: id phòng chiếu (number)
                 	+ movieId (number) 
					+ dateScreen (YYYY-MM-DD)
					+ times (HH:MM-HH:MM)
        - 	Output: + errCode: 0 (tạo thành công)
                  	+ errCode: 1 (không tìm thấy phim hoặc phòng chiếu)
                  	+ errCode: 3 (lỗi khi tạo)
	e.g: http://localhost:6060/api/plan-screen-movie/create-plan-screen-movie?roomId=1&movieId=1&dateScreen=2010-10-11&times=15:00-19:00

    API xoá lịch chiếu:
        - 	router.delete('/delete-plan-screen-movie');
        - 	Input : + planScreenMovieCode (string)
        - 	Output: + errCode: 0 (xoá thành công)
                  	+ errCode: 1 (không tìm thấy lịch chiếu)
                  	+ errCode: 3 (lỗi khi xoá)

    API cập nhật lịch chiếu:
        - 	router.put('/edit-plan-screen-movie');
        - 	Input : + planScreenMovieCode (string)
					+ roomId: id phòng chiếu (number)
                 	+ movieId (number) 
					+ dateScreen (YYYY-MM-DD)
					+ times (HH:MM-HH-MM)

        - 	Output: + errCode: 0 (cập nhật thành công)
                  	+ errCode: 1 (không tìm thấy lịch chiếu)
                  	+ errCode: 3 (lỗi khi cập nhật)
					+ errCode: 4 (thiếu ID lịch chiếu cần cập nhật)
	e.g: http://localhost:6060/api/plan-screen-movie/edit-plan-screen-movie?planScreenMovieId=8&roomId=1&movieId=1&dateScreen=2010-11-11&times=10:00-20:00

    API lấy tất cả lịch chiếu:
        - 	router.get('/get-all-plan-screen-movies');
        - 	Input : null
        - 	Output: + errCode: 0 (lấy thành công)
                  	+ errCode: 1 (không tìm thấy lịch chiếu nào)
                  	+ errCode: 3 (lỗi khi lấy dữ liệu)

    API lấy lịch chiếu theo code:
        - 	router.get('/get-plan-screen-movie-by-code');
        - 	Input : + planScreenMovieCode (string)
        - 	Output: + errCode: 0 (lấy thành công) && bản ghi lịch chiếu
                  	+ errCode: 1 (không tìm thấy lịch chiếu)
                  	+ errCode: 3 (lỗi khi lấy dữ liệu)

	API lấy id lịch chiếu để tạo vé:
        - 	router.get('/get-all-plan-screen-code-for-create-ticket');
        - 	Input : + roomId
					+ movieId
					+ startTime
					+ dateScreen
        - 	Output: + errCode: 0 (lấy thành công) && bản ghi lịch chiếu
                  	+ errCode: 1 (không tìm thấy lịch chiếu)
                  	+ errCode: 3 (lỗi khi lấy dữ liệu)
	e.g: http://localhost:6060/api/plan-screen-movie/get-all-plan-screen-id-for-create-ticket?roomId=1&movieId=1&startTime=13:00&dateScreen=2010-10-19				

	API lấy startTime và roomId:
        - 	router.get('/get-start-time');
        - 	Input : + movieId
					+ dateScreen
        - 	Output: + errCode: 0 (lấy thành công) && bản ghi lịch chiếu
                  	+ errCode: 1 (không tìm thấy lịch chiếu)
                  	+ errCode: 3 (lỗi khi lấy dữ liệu)
	e.g: http://localhost:6060/api/plan-screen-movie/get-start-time?movieId=1&dateScreen=2010-10-19

    Liên kết đường dẫn:
        - 	app.use('/api/plan-screen-movie', router);

	API lấy thông tin phim và PSMCode theo dateScreen:
        - 	router.get('/get-movie-details-by-date');
        - 	Input : + dateScreen (string)
        - 	Output: + errCode: 0 (lấy thành công) && bản ghi lịch chiếu
                  	+ errCode: 1 (không tìm thấy lịch chiếu)
                  	+ errCode: 3 (lỗi khi lấy dữ liệu)
	e.g: http://localhost:6060/api/plan-screen-movie/get-movie-details-by-date?dateScreen=2024-08-18

5. priceRouter 
	API tạo giá vé :
		-	router.post('/create-price');
		-	Input : + cost : giá vé (number) (120000,...)
					+ seatType : kiểu ghế (string) (Standard, Vip, SweetBox)
					+ roomType : kiểu phongf (string) (2D, 3D)
					+ isWeekend : !!!ngày lễ (boolean) (True // False)
					+ timeFrame: string (10-12, 12-17, 17-23)
		-	Output: + errCode: 0 (tạo thành công)
                  	+ errCode: 1 (không tìm thấy lịch chiếu)
                  	+ errCode: 3 (lỗi khi cập nhật)
    API xoá giá vé :
		-	router.delete('/delete-price');
		-	Input : + priceCode (string)
		-	Output: + errCode: 0 (xoá thành công)
					+ errCode: 1 (Không tìm thấy vé ứng với id)
					+ errCode: 3 (lỗi khi xoá)

	API cập nhật giá vé :
    	-	router.put('/edit-price');
		-	Input : + priceCode (string)
					+ cost : giá vé (number) (120000,...)
					+ seatType : kiểu ghế (string) (Standard, Vip, SweetBox)
					+ roomType : kiểu phongf (string) (2D, 3D)
					+ isWeekend : !!!ngày lễ (boolean) (True // False)
					+ timeFrame: string (10-12,12-17, 17-23)
		-	Output: + errCode : 0 (cập nhật thành công)
					+ errCode : 1 (không tìm thấy bản ghi tương ứng id)
					+ errCode : 3 (lỗi khi cập nhật)
	API lấy bản ghi :
    	-	router.get('/get-price-by-code');
		-	Input : + priceCode : (mã giá vé)
		-	Output: + errCode : 0 (Lấy thành công) && bản ghi tương ứng
					+ errCode : 1 (Không tìm thấy bản ghi tương ứng)
					+ errCode : 3 (Lỗi khi lấy bản ghi)
	API lấy tất cả bản ghi :
    	-	router.get('/get-all-prices');
		-	Input : + null
		-	Output: + errCode : 0 (Lấy thành công) && Tất cả bản ghi
					+ errCode : 1 (Ko tìm thấy bản ghi nào)
					+ errCode : 3 (Lỗi khi lấy bản ghi)

	API lấy giá của tất cả loại ghế & phòng:
    	-	router.get('/get-cost');
		-	Input : + roomType (number)
					+ seatType (number)
					+ isWeekend (0/1)
					+ timeFrame: string (10-12,12-17, 17-23)
		-	Output: + errCode : 0 (Lấy thành công) && Tất cả bản ghi
					+ errCode : 1 (Ko tìm thấy bản ghi nào)
					+ errCode : 3 (Lỗi khi lấy bản ghi)		
	e.g: http://localhost:6060/api/prices/get-cost?roomType=3D&seatType=Sweetbox&isWeekend=1

	Liên kết đường dẫn :
    	-	app.use('/api/prices', router);

6. promotionRoutes
	API tạo khuyến mãi :
		-	router.post('/create-price');
		-	Input : + description (text)
					+ discount (string)
					+ startDate (Date)
					+ endDate (Date)
		-	Output: + errCode: 0 (tạo thành công)
                  	+ errCode: 3 (lỗi khi tạo)
	e.g: http://localhost:6060/api/promotion/create-new-promotion?description=Summer%20Sale&discount=20%&startDate=2024-08-01&endDate=2024-08-31

    API xoá khuyến mãi :
		-	router.delete('/delete-promotion);
		-	Input : + promoId: id (number)
		-	Output: + errCode: 0 (xoá thành công)
					+ errCode: 1 (Không tìm thấy khuyến mãi ứng với id)
					+ errCode: 3 (lỗi khi xoá)

	API cập nhật khuyến mãi :
    	-	router.put('/edit-promotion);
		-	Input : + promoId: id (number)
					+ description (text)
					+ discount (string)
					+ startDate (Date)
					+ endDate (Date)
		-	Output: + errCode: 0 (cập nhật thành công)
					+ errCode: 1 (không tìm thấy bản ghi tương ứng id)
					+ errCode: 3 (lỗi khi cập nhật)
					+ errCode: 4 (lỗi khi cập nhật)
	e.g: http://localhost:6060/api/promotion/edit-promotion?promoId=3&description=Winter%20Sale&discount=30%&startDate=2024-12-01&endDate=2024-12-31

	API lấy khuyến mãi theo id:
    	-	router.get('/get-promotion-by-id);
		-	Input : + promoId: (id giá vé)
		-	Output: + errCode: 0 (Lấy thành công) && bản ghi tương ứng
					+ errCode: 1 (Không tìm thấy bản ghi tương ứng)
					+ errCode: 3 (Lỗi khi lấy bản ghi)
	API lấy tất cả khuyến mãi :
    	-	router.get('/get-all-promotions);
		-	Input : + null
		-	Output: + errCode: 0 (Lấy thành công) && Tất cả bản ghi
					+ errCode: 1 (Ko tìm thấy bản ghi nào)
	Liên kết đường dẫn :
    	-	app.use('/api/promotion', router);

7. roomRoutes
    API tạo mới phòng:
        - 	router.post('/create-new-room');
        - 	Input : + theatercode (string)
                 	+ type (text)
                 	+ numberSeats (number)
					+ isAvailable (0/1)
        - 	Output: + errCode: 0 (tạo thành công) + result ("room": {
																"roomId": 2,
																"roomCode": "P002",
																"theaterId": 3,
																"type": "3D",
																"numberSeats": 202,
																"isAvailable": false
															})
					+ errCode: 1 (Tạo phòng thất bại)
                  	+ errCode: 3 (lỗi khi tạo)
		Cập nhật mới : Mã phòng : roomCode , được tạo tự động theo Id, ko cần nhập liệu
	e.g: http://localhost:6060/api/room/create-new-room?roomId=111&theaterId=3&type=3D&numberSeats=202&isAvailable=0

    API xoá phòng:
        - 	router.delete('/delete-room');
        - 	Input : + roomCode: code phòng (string)
        - 	Output: + errCode: 0 (xoá thành công)
                  	+ errCode: 1 (không tìm thấy phòng)
                  	+ errCode: 3 (lỗi khi xoá)

    API cập nhật phòng:
        - 	router.put('/edit-room');
        - 	Input : + roomCode: code phòng (string)
					+ theatercode (string)
                 	+ type (text)
                 	+ numberSeats (number)
					+ isAvailable (0/1)
        - 	Output: + errCode: 0 (cập nhật thành công)
                  	+ errCode: 1 (không tìm thấy phòng)
                  	+ errCode: 3 (lỗi khi cập nhật)
					+ errCode: 4 (thiếu ID phòng cần cập nhật)
					
	e.g: http://localhost:6060/api/room/edit-room?roomId=19&type=2D&numberSeats=150&isAvailable=true			

    API lấy tất cả phòng:
        - 	router.get('/get-all-rooms');
        - 	Input : null
        - 	Output: + errCode: 0 (lấy thành công) && tất cả bản ghi phòng
                  	+ errCode: 1 (không tìm thấy phòng nào)

    API lấy phim theo code:
        - 	router.get('/get-room-by-code');
        - 	Input : + roomCode (string)
        - 	Output: + errCode: 0 (lấy thành công) && bản ghi phòng
                  	+ errCode: 1 (không tìm thấy phòng)
                  	+ errCode: 3 (lỗi khi lấy dữ liệu)

	API lấy thông tin phòng theo rạp :
		-	router.get("/get-room-in-theater");
		-	Input : + theaterCode (string)
		-	Output : + errCode: 0 (lấy thành công) && danh sách  "rooms": [
																		{
																			"roomCode": "P001",
																			"theaterCode": "R003",
																			"type": "3D",
																			"numberSeats": 72,
																			"isAvailable": true
																		},]
					 + errCode: 1 (không tìm thấy phòng)
					 + errCode: 3 (lỗi khi lấy dữ liệu)

	API tự động update số lượng ghế được tạo
		-	router.get(
    "/update-number-seat-in-room",
    roomController.handleUpdateNumberSeatInRoom
  );
		-	Input : roomCode (string)
		-	Output:
				+ errCode: 0 (cập nhật thành công) + dữ liệu phòng
				+ errCode: 1 (Ko tìm thấy phòng)
				+ errCode: 2 (Phòng ko có ghế)
				+ errCode: 3 (Lỗi khi cập nhật )+ lỗi
    Liên kết đường dẫn:
        - 	app.use('/api/room', router);

8.  seatRouter
	API tạo ghế:
		router.post('/create-seat);
		-	Input : 
				+ type (string) ('Standard', 'Vip', 'SweetBox')
				+ roomId : (number)
				+ row : (string) ('A', 'B', 'C', 'D', 'E' 'F', 'G', 'H')
				+ col : (number) (1, 2, 3, 4, 5, 6, 7, 8, 9)
				+ isAvailable : (boolean) ('True' : 0, 'False' : 1)
		-	Output: 
				+ errCode : 0 (tạo thành công)
				+ errCode : 1 (Ghế đã tồn tại)
				+ errCode : 3 (Lỗi khi tạo ghế)
    	router.delete('/delete-seat);
		-	Input : 
				+ seatId : (number) (id của ghế)
		-	Output: 
				+ errCode : 0 (Xoá thành công)
				+ errCode : 1 (Ko tìm thấy ghế theo id)
				+ errCode : 3 (Lỗi khi xoá)
	API cập nhật ghế:
    	router.put('/edit-seat);
		-	Input : 
				+ seatId : (number) (id của ghế)
				+ type : (string) ('Standard', 'Vip', 'SweetBox')
				+ roomId : (number)
				+ row : (string) ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H')
				+ col : (number) (1, 2, 3, 4, 5, 6, 7, 8, 9)
				+ isAvailable : (boolean) ('True' : 0, 'False' : 1)
		-	Output:
				+ errCode : 0 (Cập nhật thành công) && (thông tin mới)
				+ errCode : 1 (Không tim thấy ghế)
				+ errCode : 3 (Lỗi khi cập nhật ghế)
	API lấy tất cả ghế : 
    	router.get('/get-seats);
		-	Input :
				+ null
		-	Output:
				+ errCode : 0 (Lấy thành công) && tất cả bản ghi của ghế
				+ errCode : 3 (Lỗi khi lấy ghế)
	API lấy ghế theo Id:
    	router.get('/get-seat-by-id);
		-	Input :
				+ seatId : (number) (id của ghế)
		-	Output:
				+ errCode : 0 (Lấy thành công) && (bản ghi của ghế)
				+ errCode : 1 (Ko tìm thấy ghế theo id)
				+ errCode : 3 (Lỗi khi lấy ghế)

	API tạo hàng loạt ghế:
    	router.get('/auto-create-seats);
		-	Input :
				+ roomId (number)
				+ vipRows (D,E,F,G,H,I)
				+ regularRows (A,B,C,J,K)
				+ doubleRows (L)
				+ columns: số hàng ghế (number)
		-	Output:
				+ errCode : 0 (Lấy thành công) && (bản ghi của ghế)
				+ errCode : 1 (Ko tìm thấy ghế theo id)
				+ errCode : 3 (Lỗi khi lấy ghế)
	e.g: http://localhost:6060/api/seats/auto-create-seats?roomId=9&vipRows=D,E,F,G,H,I&regularRows=A,B,C,J,K&doubleRows=L&columns=18
	
	API lấy ghế theo phòng
		router.get("/get-seats-in-one-room", seatsController.handleGetSeatInOneRoom);
		-	Input :
				+ roomId (number)
		-	Output:
				+ errCode : 0 , lấy thành công
				+ errCode : 1 , ko tìm thấy ghế theo id
				+ errCode : 3 , Có lỗi xảy ra ( error)

	API tạo hàng loạt ghế (2):
    	router.post('/create-multiple-seat);

	JSON body:
	{
  "rows": [
    {
      "id": "A",
      "columns": [
        {
          "col": 1,
          "isAvailable": true,
          "roomId": 22,
          "type": "Reg"
        },
        {
          "col": 2,
          "isAvailable": true,
          "roomId": 22,
          "type": "VI"
        }
      ]
    }
  ]
}

	
	API sửa hàng loạt ghế:
    	router.put('/edit-multiple-seat);

	JSON body:
	{
  "rows": [
    {
      "id": "A",
      "columns": [
        {
          "col": 1,
          "isAvailable": true,
          "roomId": 22,
          "type": "Reg"
        },
        {
          "col": 2,
          "isAvailable": true,
          "roomId": 22,
          "type": "VI"
        }
      ]
    }
  ]
}
	
	Liên kết đường dẫn : 
    	app.use('/api/seats', router);

9. seatTicketRouter
	API tạo trung gian chiều giữa vé và ghế:
		router.post('/create-seat-ticket);
		-	Input :
				+ seatId : (number) (id của ghế)
				+ ticketId : (number) (id của vé)
		-	Output:
				+ errCode : 0 (Tạo thành công) && (thông tin của ghế)
				+ errCode : 1 (Vé đã tồn tại)
				+ errCode : 3 (Lỗi khi tạo vé)
	API lấy tất cả trung gian vé-ghế :
    	router.get('/get-all-seat-ticket);
		-	Input :
				+ null
		-	Output:
				+ errCode : 0 (Lấy thành công) && tất cả bản ghi của
				+ errCode : 3 (Lỗi khi tạo vé)
	API lấy trung gian vé-ghế theo id:
    	router.get('/get-seats-ticket-by-id);
		-	Input : 
				+ seatTicketId : id của bản ghi
		-	Output :
				+ errCode : 0 (Lấy thành công) && (bản ghi của dữ liệu)
				+ errCode : 1 (Vé ko tồn tại)
				+ errCode : 3 (Lỗi khi lấy vé)
	API xoá dữ liệu trung gian giữa vé và ghế :
    	router.delete('/delete-seats-ticket);
		-	Input :
				+ seatTicketId : id của bản ghi
		-	Output :
				+ errCode : 0 (Xoá thành công)
				+ errCode : 1 (Không tìm thấy vé)
				+ errCode : 3 (Lỗi khi xoá vé)
	API cập nhật dữ liệu :
    	router.put('/edit-seat-ticket);
		-	Input :
				+ seatTicketId : id của bản ghi
				+ seatId : (number) id của ghế
				+ ticketId : (string) id của vé
		-	Output:
				+ errCode : 0 (Cập nhật thành công)
				+ errCode : 1 (Id không hợp lệ)
				+ errCode : 2 (Vé ko tồn tại)
				+ errCode : 3 (Lỗi khi cập nhật vé)
	Liên kết đường dẫn :
    	app.use('/api/seattickets', router);

10. theaterRoutes
	API tạo rạp chiếu phim : 
		router.post("/create-theater);
		-	Input :
				+ name : (string) (tên rạp)
				+ address : (string) (địa chỉ rạp) 
				+ city : (String) (Tên thành phố chứa rạp)
		- Output:
				+ errCode : 0 (Tạo thành công) && (thông tin của rạp)
				+ errCode : 3 (Lỗi khi tạo rạp)

		Cập nhật mới : Mã rạp (R...) : theaterCode : sinh tự động
	API lấy tất cả rạp chiếu :
		router.get("/get-theater);
		-	Input : 
				+ null
		- 	Output:
				+ errCode : 0 (Lấy thành công) && (Tất cả dữ liệu)
				+ errCode : 3 (Lỗi khi lấy rạp)
	API cập nhật dữ liệu rạp
		router.put("/edit-theater);
		-	Input :
				+ theaterCode : (string) (Mã của rạp)
				+ name : (string) (tên rạp)
				+ address : (string) (địa chỉ)
				+ city : (string) (tên thành phố)
		-	Output:
				+ errCode : 0 (Cập nhật thành công)
				+ errCode : 1 (Id không hợp lệ)
				+ errCode : 3 (Lỗi khi cập nhật rạp)
	API xoá dữ liệu rạp :
		router.delete("/delete-theater);
		-	Input :
				+ theaterCode : (string) (Mã của rạp)
		-	Output:
				+ errCode : 0 (xoá thành công)
				+ errCode : 1 (Không tìm thấy rạp)
				+ errCode : 3 (Lỗi khi xoá rạp)
	API lấy rạp theo Mã:
		router.get("/get-theaters-by-code);
		-	Input :
				+ theaterCode : (string) (mã của rạp)
		-	Output:
				+ errCode : 0 (lấy thành công) && (bản ghi dữ liệu)
				+ errCode : 1 (Ko tìm thấy rạp)
				+ errCode : 3 (Lỗ khi lấy rạp)
	API lấy rạp theo city:
		router.get("/get-theaters-by-city);
		-	Input :
				+ city : (String) (tên thành phố)
		-	Output:
				+ errCode : 0 (Lấy thành công) && (tất cả bản ghi dữ liệu)
				+ errCode : 1 (Không tìm thấy rạp)
				+ errCode : 3 (Lỗi khi lấy rạp)
	app.use("/api/theater", router);

11. ticketRoutes
	API tạo mới vé :
		router.post('/create-ticket);
		-	Input :
				+ userCode : (string) (Mã người dùng)
				+ planScreenMovieId : (number) (Id lịch chiếu)
				+ seats : (number) (các ghế được đặt, cách nhau bởi dấu phẩy)
				+ bank : (string) (tên ngân hàng (VCB, MB, VTB)) 
				+ totalPrice : (number) (Tổng tiền)
				+ ticketsDate : (Data) (Ngày tạo vé)
		-	Output:
				+ errCode : 0 (Tạo thành công)
				+ errCode : 1 (Tạo thất bại)
				+ errCode : 3 (Lỗi khi tạo)
	API xoá vé :
		router.delete('/delete-ticket);
		-	Input :
				+ ticketId : (number) (Id của vé)
		-	Output:
				+ errCode : 0 (Xoá thành công)
				+ errCode : 1 (Ko tìm thấy vé)
				+ errCode : 3 (Lỗi khi xoá)
	API cập nhật vé:
		router.put('/edit-ticket);
		-	Input :
				+ ticketId : (number) (Id của vé)
				+ userId : (number) (Id người dùng)
				+ planScreenMovieId : (number) (Id lịch chiếu)
				+ sests : (number) (Các ghế được đặt)
				+ bank : (string) (tên ngân hàng (VCB, VTB, MB))
				+ totalPrice : (number) (Tổng tiền)
				+ ticketsDate : (Data) (Ngày tạo vé)
		-	Output:
				+ errCode : 0 (Cập nhật thành công)
				+ errCode : 3 (Lỗi khi cập nhật)
	API lấy tất cả vé:
		router.get('/get-tickets);
		-	Input :
				+ null
		-	Output:
				+ errCode : 0 (Lấy thành công) && tất cả bản ghi
				+ errCode : 1 (Không tồn tại vé nào)
				+ errCode : 3 (Lỗi khi lấy vé)
	API lấy vé theo Id
		router.get('/get-list-tickets);
		-	Input :
				+ ticketCode : Mã của Vé
		-	Output:
				+ errCode : 0 (Lấy thành công) && (bản ghi dữ liệu)
				+ errCode : 1 (Không tồn tại vé)
				+ errCode : 3 (Lỗi khi lấy vé)
	API lấy vé để tạo bill
		router.get('/get-ticket-details);
		-	Input :
				+ ticketCode : Mã của Vé
		-	Output:
				+ errCode : 0 (Lấy thành công) && (bản ghi dữ liệu)
				+ errCode : 1 (Không tồn tại vé)
				+ errCode : 3 (Lỗi khi lấy vé)
	
	app.use('/api/ticket', router);

12. trailerRoutes
	- API tạo trailer
		router.post('/create-trailer);
		-	Input :
				+ movieCode : (string) (Mã film)
				+ link : (string) (Đường dẫn youtube)
		-	Output:
				+ errCode : 0 (Tạo thành công)
				+ errCode : 3 (Lỗi khi tạo)
	- API xoá trailer:
		router.delete('/delete-trailer);
		-	Input :
				+ trailerCode : (string) (Mã trailer)
		-	Output:
				+ errCode : 0 (Xoá thành công)
				+ errCode : 1 (Ko tìm thấy trailer)
				+ errCode : 3 (Lỗi khi xoá)
	- API cập nhật trailer:
		router.put('/edit-trailer);
		-	Input :
				+ trailerCode : (string) (Mã trailer)
				+ movieCode : (string) (Mã film)
				+ link : (string) (Đường dẫn youtube)
		- 	Output:
				+ errCode : 0 (Cập nhật thành công)
				+ errCode : 1 (Không tìm thấy trailer)
				+ errCode : 2 (Id ko hợp lệ)
				+ errCode : 3 (Lỗi khi cập nhật)
	- API lấy tất cả trailer:
		router.get('/get-all-trailers);
		-	Input :
				+ null
		-	Output:
				+ errCode : 0 (lấy thành công) && (Tất cả bản ghi)
				+ errCode : 1 (Không tồn tại trailer)
				+ errCode : 3 (Lỗi khi lấy trailer)
	- API lấy trailer theo Id:
		router.get('/get-trailer-by-code);
		-	Input :
				+ trailerCode : (string) (Mã trailer)
		-	Output:
				+ errCode : 0 (Lấy thành công) && (Bản ghi dữ liệu)
				+ errCode : 1 (Không tồn tại trailer)
				+ errCode : 3 (Lỗi khi lấy trailer)
	- API lấy trailer theo mã film
		router.get('/get-trailer-by-movie-code);
		-	Input : 
				+ movieCode: (string) (Mã film)
		-	Output:
				+ errCode : 0 (Lấy thành công) && (Tất cả bản ghi)
				+ errCode : 1 (Ko tìm thấy trailer nào)
				+ errCode : 3 (Lỗi khi lấy trailer)
	app.use('/api/trailer', router);

13. userRoutes
	- API tạo user
		router.post('/create-new-user);
		-	Input :
				+ email : (string) (Tên email)
				+ password : (string) (Mật khẩu)
				+ firstName : (string) (Họ người dùng)
				+ lastName : (string) (Tên người dùng)
				+ username : (string) (Tên đăng nhập)
				+ birthYear  : (number) (năm sinh người dùng)
				+ phonenumber : (string) (Số điện thoại người dùng)
				+ role : (string) ('Admin'//'User')
		-	Output:
				+ errCode : 0 (Tạo thành công)
				+ errCode : 4 (Email đã tồn tại)
				+ errCode : 2 (Tạo thất bại)
				+ errCode : 3 (Lỗi khi tạo)
	- API xoá người dùng:
		router.delete('/delete-user);
		-	Input :
				+ userId : (number) (Id người dùng)
		-	Output:
				+ errCode : 0 (Xoá thành công)
				+ errCode : 1 (Không tồn tại người dùng)
				+ errCode : 3 (Lỗi khi xoá)
	- API cập nhật người dùng
		router.put('/edit-user);
		-	Input:
				+ userCode : (string) (Mã người dùng)
				+ email : (string) (Tên email)
				+ password : (string) (Mật khẩu)
				+ firstName : (string) (Họ người dùng)
				+ lastName : (string) (Tên người dùng)
				+ username : (string) (Tên đăng nhập)
				+ birthYear  : (number) (năm sinh người dùng)
				+ phonenumber : (string) (Số điện thoại người dùng)
				+ role : (string) ('Admin'//'User')
		-	Output:
				+ errCode : 0 (Cập nhật thành công)	&& (Bản ghi dữ liệu)
				+ errCode : 1 (Không tìm thấy người dùng)
				+ errCode : 4 (Id ko hợp lệ)
				+ errCode : 3 (Lỗi khi cập nhật)
	- API lấy người dùng theo mã:
		router.get('/get-user-by-code);
		-	Input :
				+ userCode: (string) (M người dùng)
		-	Output:
				+ errCode : 0 (Lấy thành công) && (Bản ghi dữ liệu)
				+ errCode : 3 (Lỗi khi lấy người dùng)
	- API lấy tất cả người dùng
		router.get('/get-all-users);
		-	Input :
				+ null
		- 	Output:
				+ errCode : 0 (Lấy thành công) && (Tất cả bản ghi dữ liệu)
				+ errCode : 3 (Lỗi khi lấy)
	- API đăng nhập
		router.post('/login-user);
		-	Input :
				+ email : (string) (Tên email)
				+ password : (string) (Mật khẩu)
		-	Output:
				+ errCode : 0 (Login success)
				+ errCode : 1 (Ko tìm thấy người dùng)
				+ errCode : 2 (Ko tìm thấy imail)
				+ errCode : 5 (Mật khẩu ko đúng)
				+ errCode : 3 (Lỗi khi đăng nhập)
	app.use('/api/user', router);	

14. BookedSeatRoutes
	- API tạo ghế đã đặt
		router.post('/create-booked-seat', bookedSeatController.handleBookSeat);
		-	Input : 
				Dạng data (req.query)
				+ bookedSeatId: (number) (Id) (Mặc định 0)
				+ ticketId: (number) (Id vé),
		-	Output:
				+ errCode : 0, message : create successfuly, result : newBookedSeat
				+ errCode : 1, message : failed to create booked seat
				+ errCode : 2, message : Seat was already booked
				+ errCode : 3, message : Error create + (error)
	- API lấy hàng và cột ghế đã đặt
		router.get('/get-row-and-col-of-booked-seat', bookedSeatController.handleGetRowAndColOfBookedSeat);
		-	Input :
				+ planScreenMovieId : (number) (Kế hoạch ca chiếu)
		-	Output:
				+ errCode : 0, message : Lấy thành công, rowAndColArray : Mảng 2 chiều có dạng : [ [ 'A', 4 ], [ 'A', 5 ], [ 'A', 6 ] ]
				+ errCode : 1, message ; lấy thất bại
				+ errCode : 3, message : lỗi khi lấy + error
	
	- API tách hàng và Cột
		router.get("/get-row-and-col-of-booked-seat", bookedSeatController.handleGetRowAndColOfBookedSeat);
		-	Input :
				Dạng data : (req.query)
				+ ticketId : (number) Id của Vé
		-	Output :
				+ errCode : 0, message : Lấy thành công, planSCreenMovieId, rows, cols
				+ errCode : 1, message : Lấy thất bại
				+ errCode : 3, message : lỗi khi lấy + error
	app.use('/api/bookedSeat', router);

	
		
